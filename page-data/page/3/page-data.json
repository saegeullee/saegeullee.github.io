{"componentChunkName":"component---src-templates-index-template-js","path":"/page/3","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"fields":{"slug":"/category/nodejs/nodejs-typescript-setup","categorySlug":"/category/nodejs/"},"frontmatter":{"title":"NODEJS & 타입스크립트 개발환경 셋팅","date":"2019-12-09T11:46:37.121Z","category":"nodejs","description":"타입스크립트로 nodejs 서버를 개발하기 위한 환경 셋팅하는 방법을 알아보자"}}},{"node":{"fields":{"slug":"/category/typescript/typescript-advanced-type","categorySlug":"/category/typescript/"},"frontmatter":{"title":"타입스크립트 타입 고급","date":"2019-12-08T18:46:37.121Z","category":"typescript","description":"인터페이스를 사용하여 커스텀 타입의 객체를 만들 수 있다. 아래의 예시에서 Person 인터페이스는 특정 객체가 반드시 name, age 프로퍼티를 갖고 greet 메서드를 갖는 객체로 구현되어야 함을 나타낸다..."}}},{"node":{"fields":{"slug":"/category/typescript/typescript-interfaces","categorySlug":"/category/typescript/"},"frontmatter":{"title":"타입스크립트 인터페이스","date":"2019-12-07T21:46:37.121Z","category":"typescript","description":"인터페이스를 사용하여 커스텀 타입의 객체를 만들 수 있다. 아래의 예시에서 Person 인터페이스는 특정 객체가 반드시 name, age 프로퍼티를 갖고 greet 메서드를 갖는 객체로 구현되어야 함을 나타낸다..."}}},{"node":{"fields":{"slug":"/category/typescript/typescript-classes","categorySlug":"/category/typescript/"},"frontmatter":{"title":"타입스크립트 클래스","date":"2019-12-07T18:46:37.121Z","category":"typescript","description":"타입스크립트에서 클래스의 property는 public 또는 private 키워드를 지정할 수 있다. 아무 키워드도 지정하지 않는다면 디폴트로 public이다. public은 클래스의 외부에서 접근이 가능하다. 반면에 private은 클래스의 외부에서 접근이 불가능하고 클래스 내부에서만 접근 가능하다..."}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"currentPage":3,"postsLimit":4,"postsOffset":12,"prevPagePath":"/page/2","nextPagePath":"/page/4","hasPrevPage":true,"hasNextPage":true}}}
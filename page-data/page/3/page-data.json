{"componentChunkName":"component---src-templates-index-template-js","path":"/page/3","webpackCompilationHash":"1794547823b8360737df","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"fields":{"slug":"/category/project/2nd-group-project-review","categorySlug":"/category/project/"},"frontmatter":{"title":"2차 그룹 프로젝트 후기","date":"2019-11-24T21:16:37.121Z","category":"project","description":"2019년 11월 11일 ~ 2019년 11월 22일, 총 12일 동안 위코드에서 2차 그룹 프로젝트를 진행하였다. 우리팀은 프론트엔드 4명(리액트네이티브 2명, 리액트 2명), 백엔드 2명 총 6명으로 구성되었고 온라인 클래스 플랫폼 클래스 101을 클론하였다..."}}},{"node":{"fields":{"slug":"/nodejs/error-handling-middleware","categorySlug":"/category/nodejs/"},"frontmatter":{"title":"에러 핸들링 미들웨어","date":"2019-11-16T12:00:37.121Z","category":"nodejs","description":"어플리케이션에서 발생할 수 있는 에러의 종류를 2가지로 나눠 생각해볼 수 있다. operational errors 와 programming errors이다. 전자는 시스템 운영상에 발생하는 에러로 프로그래머가 미리 예측할 수 있고 이에 대비해야 한다. 반면에 후자는 프로그래머가 잘못된 코드를 작성해서 발생하는 에러이다..."}}},{"node":{"fields":{"slug":"/nodejs/middleware-and-the-request-response-cycle","categorySlug":"/category/nodejs/"},"frontmatter":{"title":"미들웨어와 요청응답 싸이클","date":"2019-11-15T17:30:37.121Z","category":"nodejs","description":"express app 이 클라이언트로부터 http request를 받으면 express app은 request와 response 객체를 만든다. 미들웨어는 주로 클라이언트에게 요청에 대한 유의미한 응답을 보내주기 위해 사용된다. 아래와같이 request object의 request body에 접근하기 위해서도 미들웨어를 사용한다..."}}},{"node":{"fields":{"slug":"/nodejs/how-nodejs-works","categorySlug":"/category/nodejs/"},"frontmatter":{"title":"Nodejs가 작동하는 방법","date":"2019-11-15T13:10:37.121Z","category":"nodejs","description":"nodejs runtime 은 몇 가지 dependency 가 있는데 그 중 가장 중요한 것이 v8 engine과 libuv이다. v8 engine이 없다면 nodejs는 javascript를 이해할 수 없다. v8 engine이 javascript 코드를 컴퓨터가 이해할 수 있는 머신 코드로 변환해주기 때문이다..."}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"currentPage":3,"postsLimit":4,"postsOffset":12,"prevPagePath":"/page/2","nextPagePath":"/page/4","hasPrevPage":true,"hasNextPage":true}}}
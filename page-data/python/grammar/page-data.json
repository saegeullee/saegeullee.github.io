{"componentChunkName":"component---src-templates-post-template-js","path":"/python/grammar","result":{"data":{"markdownRemark":{"id":"b0131b6e-47d8-59a3-abc3-f39635696f77","html":"<ol>\n<li>배열의 새로운 인덱스(해당 인덱스는 비어있는 상태)로 접근하여 값을 할당할 수 있는 자바스크립트와 달리 파이썬에서는 이것이 불가능하다.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//javascript</span>\n<span class=\"token keyword\">var</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\narr<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// arr는 [1, 2]</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\">#python</span>\narr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\narr<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">2</span>  <span class=\"token comment\">#IndexError: list assignment index out of range</span>\n\n<span class=\"token comment\">#파이썬에서는 append 메서드로 배열에 순차적으로 엘리먼트를 추가해야한다</span>\narr<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># arr [1, 2]</span></code></pre></div>\n<ol start=\"2\">\n<li>파이썬 삼항연산자는 다음과 같이 사용해야 한다. 자바스크립트의 ? 와 다르다.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">a <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\nb <span class=\"token operator\">=</span> <span class=\"token number\">20</span>\nresult <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>a<span class=\"token operator\">-</span>b<span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> a <span class=\"token operator\">==</span> b <span class=\"token keyword\">else</span> <span class=\"token punctuation\">(</span>a<span class=\"token operator\">+</span>b<span class=\"token punctuation\">)</span>    <span class=\"token comment\"># 결과는 a+b = 30</span></code></pre></div>\n<ol start=\"3\">\n<li>for 문에서 배열의 엘리먼트와 인덱스 구하기</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">a <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> idx<span class=\"token punctuation\">,</span> val <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">,</span> val<span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">\"\"\"\n0 1\n1 2\n2 3\n\"\"\"</span></code></pre></div>\n<ol start=\"4\">\n<li>파이썬에서는 후위표기법, 전위표기법 ++ 가 없다. 따라서 상수를 담고 있는 변수를 증가시키려면 다음과 같이 해야한다.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">count <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token comment\"># count++ -> 런타임에러</span>\ncount <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></code></pre></div>\n<ol start=\"5\">\n<li>파이썬에서 해당 문자열이 숫자인지를 판별하기 위한 함수는 <code class=\"language-text\">isdigit()</code>이 있다.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token string\">'2'</span><span class=\"token punctuation\">.</span>isdigit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#True</span>\n<span class=\"token string\">'*'</span><span class=\"token punctuation\">.</span>isdigit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#False</span></code></pre></div>\n<ol start=\"6\">\n<li>eval 함수를 통해 문자열로 된 수학 계산식을 수행할 수 있다. 주어진 문자열 사이에 공백이 있어도 정확하게 동작한다.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2 * 3\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 6</span>\n<span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"10-3\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 7</span>\n<span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"*\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"3\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"-\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"2\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 4</span></code></pre></div>","fields":{"slug":"/python/grammar","tagSlugs":["/tag/python/"]},"frontmatter":{"date":"2020-05-25T11:50:37.121Z","description":"python을 공부하다 새로 알게 된 지식에 대해 정리한다.","tags":["python"],"title":"python 문법 정리","socialImage":"/media/image-2.jpg"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/python/grammar"}}}
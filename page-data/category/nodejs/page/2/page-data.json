{"componentChunkName":"component---src-templates-category-template-js","path":"/category/nodejs/page/2","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"fields":{"categorySlug":"/category/nodejs/","slug":"/nodejs/deploy-nodejs-server-to-aws-ec2"},"frontmatter":{"date":"2019-12-06T11:50:37.121Z","description":"이번에 클래스101과 협업을 하면서 내부 인사팀 툴을 개발 후 서버 배포까지 했다. 원래는 클래스101 개발자의 가이드를 받아 아마존 람다에 배포를 하려 했지만.. 처음해보는 것이라 배포 진행이 잘 안되었고 일정상 시간을 더이상 지체하면 안되기 때문에 아마존 ec2에 배포하는 것으로 선회했다. 데이터베이스는 아마존의 documentDB를 사용했다. 배포 과정을 정리해보겠다. 아마존 ec2는 이미 설치가 되어있다고 가정한다....","category":"nodejs","title":"Nodejs 서버 아마존 ec2에 배포하기"}}},{"node":{"fields":{"categorySlug":"/category/nodejs/","slug":"/nodejs/nodejs-port-already-in-use-error"},"frontmatter":{"date":"2019-12-02T15:50:37.121Z","description":"Node 패키지 nodemon 덕분에 Nodejs 서버 개발을 하다가 서버를 실행시킨 상태에서 코드를 고친 뒤 저장을 하면 서버가 자동으로 다시 시작된다. 하지만 왜 그런지는 모르겠지만 가끔 아니 꽤 자주 서버가 자동으로 다시 시작될 때 `port already in use`에러가 발생한다...","category":"nodejs","title":"Nodejs 에러 port address already in use"}}},{"node":{"fields":{"categorySlug":"/category/nodejs/","slug":"/nodejs/error-handling-middleware"},"frontmatter":{"date":"2019-11-16T12:00:37.121Z","description":"어플리케이션에서 발생할 수 있는 에러의 종류를 2가지로 나눠 생각해볼 수 있다. operational errors 와 programming errors이다. 전자는 시스템 운영상에 발생하는 에러로 프로그래머가 미리 예측할 수 있고 이에 대비해야 한다. 반면에 후자는 프로그래머가 잘못된 코드를 작성해서 발생하는 에러이다...","category":"nodejs","title":"에러 핸들링 미들웨어"}}},{"node":{"fields":{"categorySlug":"/category/nodejs/","slug":"/nodejs/middleware-and-the-request-response-cycle"},"frontmatter":{"date":"2019-11-15T17:30:37.121Z","description":"express app 이 클라이언트로부터 http request를 받으면 express app은 request와 response 객체를 만든다. 미들웨어는 주로 클라이언트에게 요청에 대한 유의미한 응답을 보내주기 위해 사용된다. 아래와같이 request object의 request body에 접근하기 위해서도 미들웨어를 사용한다...","category":"nodejs","title":"미들웨어와 요청응답 싸이클"}}},{"node":{"fields":{"categorySlug":"/category/nodejs/","slug":"/nodejs/how-nodejs-works"},"frontmatter":{"date":"2019-11-15T13:10:37.121Z","description":"nodejs runtime 은 몇 가지 dependency 가 있는데 그 중 가장 중요한 것이 v8 engine과 libuv이다. v8 engine이 없다면 nodejs는 javascript를 이해할 수 없다. v8 engine이 javascript 코드를 컴퓨터가 이해할 수 있는 머신 코드로 변환해주기 때문이다...","category":"nodejs","title":"Nodejs가 작동하는 방법"}}},{"node":{"fields":{"categorySlug":"/category/nodejs/","slug":"/nodejs/what-is-express"},"frontmatter":{"date":"2019-11-11T00:10:37.121Z","description":" Express is a minimal node.js framework, a higher level of abstraction. Express contains a very robust set of features: complex routing, easier handling of requests and responses, middleware, server-side rendering etc...","category":"nodejs","title":"Express 프레임워크"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"category":"nodejs","currentPage":2,"postsLimit":6,"postsOffset":12,"prevPagePath":"/category/nodejs/page/1","nextPagePath":"/category/nodejs/page/3","hasPrevPage":true,"hasNextPage":true}}}
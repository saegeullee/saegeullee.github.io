{"componentChunkName":"component---src-templates-post-template-js","path":"/category/javascript/javscript-es5-and-es6/","result":{"data":{"markdownRemark":{"id":"65ec96a9-4d1f-5f4a-8969-4329d8aebc06","html":"<blockquote>\n<p><strong><a href=\"https://www.udemy.com/course/the-complete-javascript-course/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">유데미 자바스크립트</a></strong> 수업을 듣고 정리한 내용입니다.</p>\n</blockquote>\n<h1 id=\"let-and-const를-사용한-변수-선언\"><a href=\"#let-and-const%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%9C-%EB%B3%80%EC%88%98-%EC%84%A0%EC%96%B8\" aria-label=\"let and const를 사용한 변수 선언 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>let and const를 사용한 변수 선언</h1>\n<p>ES6에서는 변수를 선언하는 키워드가 바뀌었다. ES5에서는 <code class=\"language-text\">var x</code>와 같이 변수를 선언하였다. ES6에서는 <code class=\"language-text\">let</code>,<code class=\"language-text\">const</code>가 추가되었다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> es5 <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//ES5</span>\n<span class=\"token keyword\">let</span> es6_let <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//ES6</span>\n<span class=\"token keyword\">const</span> es6_const <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//ES6</span>\n\nes5 <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//값을 바꿀 수 있다.</span>\nes6_let <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//값을 바꿀 수 있다.</span>\nes6_const <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//값을 바꿀 수 없다. Assigned to constant variable. 에러 발생</span></code></pre></div>\n<p>ES5의 <code class=\"language-text\">var</code>는 function scoped이고, ES6의 <code class=\"language-text\">const</code>와 <code class=\"language-text\">let</code>은 block scoped이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//ES5</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">driverLicense5</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">passedTest</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>passedTest<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> firstName <span class=\"token operator\">=</span> <span class=\"token string\">'John'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> yearOfBirth <span class=\"token operator\">=</span> <span class=\"token number\">1990</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>\n    firstName <span class=\"token operator\">+</span> <span class=\"token string\">', born in '</span> <span class=\"token operator\">+</span> yearOfBirth <span class=\"token operator\">+</span> <span class=\"token string\">', is now officially allowed to drive a car.'</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">driverLicense5</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//output</span>\n<span class=\"token comment\">//John, born in 1990, is now officially allowed to drive a car.</span>\n<span class=\"token comment\">//var는 function scoped이기 때문에 같은 function 안에 있으면 해당 변수에 접근할 수 있다.</span>\n\n<span class=\"token comment\">//ES6</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">driverLicense6</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">passedTest</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>passedTest<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> firstName <span class=\"token operator\">=</span> <span class=\"token string\">'John'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> yearOfBirth <span class=\"token operator\">=</span> <span class=\"token number\">1990</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>\n    firstName <span class=\"token operator\">+</span> <span class=\"token string\">', born in '</span> <span class=\"token operator\">+</span> yearOfBirth <span class=\"token operator\">+</span> <span class=\"token string\">', is now officially allowed to drive a car.'</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">driverLicense6</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//output</span>\n<span class=\"token comment\">//Uncaught ReferenceError: Cannot access 'firstName' before initialization at driverLicense6</span>\n<span class=\"token comment\">//let과 const는 block scoped 이기 때문에 if문 block 안에서</span>\n<span class=\"token comment\">//선언 및 초기화된 변수들을 if문 block 밖에서 접근할 수 없다.</span></code></pre></div>\n<p>위의 ES6 예시는 아래와 같이 작성해야 정상적으로 작동한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">driverLicense6</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">passedTest</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> firstName<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> yearOfBirth <span class=\"token operator\">=</span> <span class=\"token number\">1990</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>passedTest<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    firstName <span class=\"token operator\">=</span> <span class=\"token string\">'John'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//const(상수)이기 때문에 값 변경 불가능</span>\n    <span class=\"token comment\">//yearOfBirth = 1990;</span>\n  <span class=\"token punctuation\">}</span>\n\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>\n    firstName <span class=\"token operator\">+</span> <span class=\"token string\">', born in '</span> <span class=\"token operator\">+</span> yearOfBirth <span class=\"token operator\">+</span> <span class=\"token string\">', is now officially allowed to drive a car.'</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">driverLicense6</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//output</span>\n<span class=\"token comment\">//John, born in 1990, is now officially allowed to drive a car.</span></code></pre></div>\n<p>변수 선언 이전에 해당 변수를 사용하면서 발생하는 결과에 대한 차이점은 다음과 같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//ES5</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">driverLicense5</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">passedTest</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>firstName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> firstName <span class=\"token operator\">=</span> <span class=\"token string\">'John'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">driverLicense5</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//output undefined.</span>\n<span class=\"token comment\">//execution context에서 모든 변수들은 hoisted되고 undefined로 셋팅된다.</span>\n<span class=\"token comment\">//따라서 해당변수를 선언하고 초기화하기 전에 사용하면 undefined가 된다.</span>\n\n<span class=\"token comment\">//ES6</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">driverLicense6</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">passedTest</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>firstName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> firstName <span class=\"token operator\">=</span> <span class=\"token string\">'John'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">driverLicense6</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//output</span>\n<span class=\"token comment\">//Uncaught ReferenceError: firstName is not defined</span>\n<span class=\"token comment\">//변수가 선언되기 전에 사용하지 못한다.(에러방지)</span></code></pre></div>\n<h1 id=\"blocks-and-iffes\"><a href=\"#blocks-and-iffes\" aria-label=\"blocks and iffes permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Blocks and IFFEs</h1>\n<p>ES5에서는 IFFE(Immediately Invoked Function Expression)를 사용하여 data privacy를 구현하였다.\n하지만 ES6에서는 let, const가 block scoped이기 때문에 훨씬 간단하게 block {}만 사용하면 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//ES5</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> c <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//output</span>\nUncaught ReferenceError<span class=\"token punctuation\">:</span> c is not defined</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//ES6</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> a <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> b <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">+</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//output</span>\n<span class=\"token comment\">//Uncaught ReferenceError: Cannot access 'a' before initialization</span>\n<span class=\"token comment\">//block scoped이기 때문에 block 외부에서 접근 불가능</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//ES6</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> c <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//output -> 3</span>\n<span class=\"token comment\">//var로 선언하였기 때문에 function scoped가 되어 block 외부에서 접근가능</span></code></pre></div>\n<h1 id=\"strings\"><a href=\"#strings\" aria-label=\"strings permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Strings</h1>\n<p>ES6 문법의 <code class=\"language-text\">template literal</code>을 사용하면 변수의 값을 string에 사용하기 훨씬 수월해진다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> firstName <span class=\"token operator\">=</span> <span class=\"token string\">'John'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> lastName <span class=\"token operator\">=</span> <span class=\"token string\">'Smith'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> yearOfBirth <span class=\"token operator\">=</span> <span class=\"token number\">1990</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">calcAge</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">year</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token number\">2016</span> <span class=\"token operator\">-</span> year<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//ES5</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>\n  <span class=\"token string\">'This is '</span> <span class=\"token operator\">+</span>\n    firstName <span class=\"token operator\">+</span>\n    <span class=\"token string\">' '</span> <span class=\"token operator\">+</span>\n    lastName <span class=\"token operator\">+</span>\n    <span class=\"token string\">'. He was born in '</span> <span class=\"token operator\">+</span>\n    yearOfBirth <span class=\"token operator\">+</span>\n    <span class=\"token string\">'. Today, he is '</span> <span class=\"token operator\">+</span>\n    <span class=\"token function\">calcAge</span><span class=\"token punctuation\">(</span>yearOfBirth<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span>\n    <span class=\"token string\">' years old.'</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//ES6 - template literals</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>\n  <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">This is </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>firstName<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>lastName<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">. He was born in </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>yearOfBirth<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">.\n  Today, he is </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token function\">calcAge</span><span class=\"token punctuation\">(</span>yearOfBirth<span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> years old.</span><span class=\"token template-punctuation string\">`</span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h1 id=\"arrow-functions\"><a href=\"#arrow-functions\" aria-label=\"arrow functions permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Arrow functions</h1>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> years <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1990</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1965</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1982</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1937</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//ES5</span>\n<span class=\"token keyword\">var</span> age5 <span class=\"token operator\">=</span> years<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">el</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token number\">2016</span> <span class=\"token operator\">-</span> el<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//ES6</span>\n<span class=\"token comment\">//ES6에서는 function, return, 중괄호{}를 생략하고 동일하게 표현 가능</span>\n<span class=\"token keyword\">let</span> age6 <span class=\"token operator\">=</span> years<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">el</span> <span class=\"token operator\">=></span> <span class=\"token number\">2016</span> <span class=\"token operator\">-</span> el<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//인자가 하나일 경우 아래와 같이 괄호()을 생략가능</span>\n<span class=\"token keyword\">let</span> age6 <span class=\"token operator\">=</span> years<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">el</span> <span class=\"token operator\">=></span> <span class=\"token number\">2016</span> <span class=\"token operator\">-</span> el<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//인자가 두 개 이상일 경우에는 반드시 괄호()를 붙여 인자를 감싸야한다.</span>\nage6 <span class=\"token operator\">=</span> years<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">el<span class=\"token punctuation\">,</span> index</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Age elements </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>index <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token number\">2019</span> <span class=\"token operator\">-</span> el<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">. </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>age6<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//리턴하기 전에 다른 코드를 실행시키고 싶으면 중괄호{}로 감싸고</span>\n<span class=\"token comment\">//return을 써서 리턴하면된다.</span>\nage6 <span class=\"token operator\">=</span> years<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">el<span class=\"token punctuation\">,</span> index</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> now <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getFullYear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> age <span class=\"token operator\">=</span> now <span class=\"token operator\">-</span> el<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Age elements </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>index <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>age<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">. </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"메서드와-일반-함수에서-this-키워드의-차이점\"><a href=\"#%EB%A9%94%EC%84%9C%EB%93%9C%EC%99%80-%EC%9D%BC%EB%B0%98-%ED%95%A8%EC%88%98%EC%97%90%EC%84%9C-this-%ED%82%A4%EC%9B%8C%EB%93%9C%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90\" aria-label=\"메서드와 일반 함수에서 this 키워드의 차이점 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>메서드와 일반 함수에서 this 키워드의 차이점</h3>\n<p>참고로 메서드란 객체 내부에 속한 함수를 지칭한다. 아래의 예시에서 box5 객체에 속한 clickMe/라는 함수는 메서드이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//ES5</span>\n<span class=\"token keyword\">var</span> box5 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  color<span class=\"token punctuation\">:</span> <span class=\"token string\">'green'</span><span class=\"token punctuation\">,</span>\n  position<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">clickMe</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//clickMe 함수는 box5 객체에 속한 메서드이다. 여기서 this 는 이 객체를 가리킨다.</span>\n    <span class=\"token comment\">//따라서 color:green 과 position:1을 this 키워드를 통해 접근 가능하다.</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'color : '</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>color <span class=\"token operator\">+</span> <span class=\"token string\">' position : '</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.green'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">var</span> str <span class=\"token operator\">=</span>\n        <span class=\"token comment\">//이 콜백 함수는 box5 객체에 속한 메서드가 아니라 일반 함수이다.</span>\n        <span class=\"token comment\">//따라서 이 콜백 함수 내부에서 사용된 this는 box5 객체를 가리키는 것이 아니라</span>\n        <span class=\"token comment\">//window 객체를 가리킨다.따라서 this.position과 this.color는 undefined가 된다.</span>\n        <span class=\"token string\">'This is box number '</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>position <span class=\"token operator\">+</span> <span class=\"token string\">' and it is '</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">;</span>\n      <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//위의 예시에서 발생하는 문제를 ES5에서는 아래와 같이 해결할 수 있다.</span>\nbox5 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  color<span class=\"token punctuation\">:</span> <span class=\"token string\">'green'</span><span class=\"token punctuation\">,</span>\n  position<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">clickMe</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> self <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n    document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.green'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">var</span> str <span class=\"token operator\">=</span>\n        <span class=\"token comment\">//box5 객체의 color :green 과 position:1 에 접근 가능</span>\n        <span class=\"token string\">'This is box number '</span> <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>position <span class=\"token operator\">+</span> <span class=\"token string\">' and it is '</span> <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">;</span>\n      <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"es6-function-arrow-에서의-this\"><a href=\"#es6-function-arrow-%EC%97%90%EC%84%9C%EC%9D%98-this\" aria-label=\"es6 function arrow 에서의 this permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ES6 function arrow 에서의 this</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//ES6</span>\n<span class=\"token keyword\">const</span> box6 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  color<span class=\"token punctuation\">:</span> <span class=\"token string\">'blue'</span><span class=\"token punctuation\">,</span>\n  position<span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">clickMe</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.blue'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">var</span> str <span class=\"token operator\">=</span>\n        <span class=\"token comment\">//arrow function을 사용하면 this 키워드가 box6 객체를 가리킨다.</span>\n        <span class=\"token comment\">//arrow function은 자신의 주변과 this 키워드를 공유하기 때문이다.</span>\n        <span class=\"token comment\">//따라서 this를 통해 box6 객체의 position:2 와 color: blue 에 접근가능하다.</span>\n        <span class=\"token string\">'This is box number '</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>position <span class=\"token operator\">+</span> <span class=\"token string\">' and it is '</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">;</span>\n      <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>아래의 예시에서는 다시 콜백 arrow function 내부의 this.position 과 this.color 은 undefined가 된다.\n왜그럴까? 자세히 보면 아래의 예시와 바로 위의 예시의 차이점은 위의 예시에서는 clickMe 메서드를 ES5문법인 function 키워드를 사용하여\n선언하였고 아래의 예시는 ES6의 arrow function으로 선언하였다. 따라서 아래의 예시에서 clickMe 메서드 내부에서 this 는 global window 객체를 가리킨다. arrow function은 자신의 주변과 this키워드를 공유하고 그 주변은 global scope이기 때문에 window를 가리키게 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> box66 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  color<span class=\"token punctuation\">:</span> <span class=\"token string\">'blue'</span><span class=\"token punctuation\">,</span>\n  position<span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">clickMe</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//여기서 this는 window 객체를 가리킨다.</span>\n    document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.blue'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">var</span> str <span class=\"token operator\">=</span>\n        <span class=\"token comment\">//따라서 여기서도 this는 window 객체를 가리킨다.</span>\n        <span class=\"token string\">'This is box number '</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>position <span class=\"token operator\">+</span> <span class=\"token string\">' and it is '</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">;</span>\n      <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>","fields":{"slug":"/category/javascript/javscript-es5-and-es6/","tagSlugs":["/tag/javascript/"]},"frontmatter":{"date":"2019-10-0T16:16:37.121Z","description":"javascript ES5와 ES6 비교","tags":["javascript"],"title":"자바스크립트 ES5 vs ES6(variable, blocks, strings, arrow functions)","socialImage":"/media/image-2.jpg"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/category/javascript/javscript-es5-and-es6/"}}}
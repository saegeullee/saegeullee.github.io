{"componentChunkName":"component---src-templates-post-template-js","path":"/category/typescript/typescript-advanced-type","webpackCompilationHash":"1794547823b8360737df","result":{"data":{"markdownRemark":{"id":"ad1b5c47-6bce-57ac-a3f1-105edd4f406f","html":"<blockquote>\n<p><strong><a href=\"https://www.udemy.com/course/understanding-typescript/learn/lecture/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">유데미 TYPESCRIPT</a></strong> 수업을 듣고 정리한 내용입니다.</p>\n</blockquote>\n<h2 id=\"intersection-types\"><a href=\"#intersection-types\" aria-label=\"intersection types permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Intersection types</h2>\n<p>타입스크립트 Intersection 타입은 객체를 다룰 때 특히 유용하다. 다음의 예시와 같이 Admin, Employee 객체 타입의 프로퍼티를 모두 갖는 ElevatedEmployee 타입을 Intersection을 사용하여 정의할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">type</span> Admin <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  privileges<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">type</span> Employee <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  startDate<span class=\"token punctuation\">:</span> Date<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">type</span> ElevatedEmployee <span class=\"token operator\">=</span> Admin <span class=\"token operator\">&amp;</span> Employee<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> e1<span class=\"token punctuation\">:</span> ElevatedEmployee <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Louies\"</span><span class=\"token punctuation\">,</span>\n  startDate<span class=\"token punctuation\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  privileges<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"create-server\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"type-guards\"><a href=\"#type-guards\" aria-label=\"type guards permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Type guards</h2>\n<h3 id=\"객체-타입-가드\"><a href=\"#%EA%B0%9D%EC%B2%B4-%ED%83%80%EC%9E%85-%EA%B0%80%EB%93%9C\" aria-label=\"객체 타입 가드 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>객체 타입 가드</h3>\n<p>다음과 같이 위 예시의 Admin과 Employee를 가져와 UnknownEmployee 라는 새로운 객체 타입을 정의했다.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">type</span> UnknownEmployee <span class=\"token operator\">=</span> Employee <span class=\"token operator\">|</span> Admin<span class=\"token punctuation\">;</span></code></pre></div>\n<p>UnknownEmployee 타입 객체의 정보를 출력하는 printEmployeeInformation 함수에서 다음과 같이 정보를 출력하면 에러가 발생한다. UnknownEmployee 타입의 객체는 Employee와 Admin 의 유니온 타입이기 때문에 UnknownEmployee 타입의 객체에 privileges 또는 startDate 프로퍼티가 확실하게 있는지를 보장할 수 없기 때문이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">function</span> <span class=\"token function\">printEmployeeInformation</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">emp<span class=\"token punctuation\">:</span> UnknownEmployee</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Name: \"</span> <span class=\"token operator\">+</span> emp<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>emp<span class=\"token punctuation\">.</span>privileges<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 에러발생</span>\n  <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Start Date: \"</span> <span class=\"token operator\">+</span> emp<span class=\"token punctuation\">.</span>startDate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 에러발생</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>이때는 printEmployeeInformation 함수를 다음과 같이 구성하여 일종의 타입을 보호하는 역할을 할 수 있다. 해당 프로퍼티가 있을 때만 해당 프로퍼티의 정보를 출력하게끔 하는 것이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">function</span> <span class=\"token function\">printEmployeeInformation</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">emp<span class=\"token punctuation\">:</span> UnknownEmployee</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Name: \"</span> <span class=\"token operator\">+</span> emp<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"privileges\"</span> <span class=\"token keyword\">in</span> emp<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Privileges: \"</span> <span class=\"token operator\">+</span> emp<span class=\"token punctuation\">.</span>privileges<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"startDate\"</span> <span class=\"token keyword\">in</span> emp<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Start Date: \"</span> <span class=\"token operator\">+</span> emp<span class=\"token punctuation\">.</span>startDate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">printEmployeeInformation</span><span class=\"token punctuation\">(</span>e1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">printEmployeeInformation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Gina\"</span><span class=\"token punctuation\">,</span> startDate<span class=\"token punctuation\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"클래스-타입-가드\"><a href=\"#%ED%81%B4%EB%9E%98%EC%8A%A4-%ED%83%80%EC%9E%85-%EA%B0%80%EB%93%9C\" aria-label=\"클래스 타입 가드 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>클래스 타입 가드</h3>\n<p>아래의 예시에서 Vehicle 이라는 Car 클래스와 Truck 클래스의 유니온 타입 클래스를 정의했다. loadCargo 라는 메서드는 Truck 클래스의 인스턴스만 가지고 있기 때문에 useVehicle 함수에서 인자로 들어오는 객체가 인스턴스화 된 클래스가 어떤 클래스인지 조건을 검사하여 Truck의 인스턴스일 때만 해당 메서드를 사용할 수 있게끔 할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Car</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">drive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Driving...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Truck</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">drive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Driving a truck...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">loadCargo</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">amount<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Loading cargo ... \"</span> <span class=\"token operator\">+</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">type</span> Vehicle <span class=\"token operator\">=</span> Car <span class=\"token operator\">|</span> Truck<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> v1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Car</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> v2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Truck</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">useVehicle</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">vehicle<span class=\"token punctuation\">:</span> Vehicle</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  vehicle<span class=\"token punctuation\">.</span><span class=\"token function\">drive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>vehicle <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Truck</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    vehicle<span class=\"token punctuation\">.</span><span class=\"token function\">loadCargo</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">useVehicle</span><span class=\"token punctuation\">(</span>v1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">useVehicle</span><span class=\"token punctuation\">(</span>v2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>위의 예시에서 useVehicle 함수를 다음과 같이 객체의 프로퍼티를 검사하는 것처럼 해도 정상적으로 동작한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">function</span> <span class=\"token function\">useVehicle</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">vehicle<span class=\"token punctuation\">:</span> Vehicle</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  vehicle<span class=\"token punctuation\">.</span><span class=\"token function\">drive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"loadCargo\"</span> <span class=\"token keyword\">in</span> vehicle<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    vehicle<span class=\"token punctuation\">.</span><span class=\"token function\">loadCargo</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"유니온-객체-타입-가드\"><a href=\"#%EC%9C%A0%EB%8B%88%EC%98%A8-%EA%B0%9D%EC%B2%B4-%ED%83%80%EC%9E%85-%EA%B0%80%EB%93%9C\" aria-label=\"유니온 객체 타입 가드 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>유니온 객체 타입 가드</h3>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">Bird</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">type</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"bird\"</span><span class=\"token punctuation\">;</span>\n  flyingSpeed<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">Horse</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">type</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"horse\"</span><span class=\"token punctuation\">;</span>\n  runningSpeed<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">type</span> Animal <span class=\"token operator\">=</span> Bird <span class=\"token operator\">|</span> Horse<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">moveAnimal</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">animal<span class=\"token punctuation\">:</span> Animal</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> speed<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>animal<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"bird\"</span><span class=\"token punctuation\">:</span>\n      speed <span class=\"token operator\">=</span> animal<span class=\"token punctuation\">.</span>flyingSpeed<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"horse\"</span><span class=\"token punctuation\">:</span>\n      speed <span class=\"token operator\">=</span> animal<span class=\"token punctuation\">.</span>runningSpeed<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Moving at speed: \"</span> <span class=\"token operator\">+</span> speed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">moveAnimal</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">type</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"bird\"</span><span class=\"token punctuation\">,</span> flyingSpeed<span class=\"token punctuation\">:</span> <span class=\"token number\">10</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"인덱스-프로퍼티\"><a href=\"#%EC%9D%B8%EB%8D%B1%EC%8A%A4-%ED%94%84%EB%A1%9C%ED%8D%BC%ED%8B%B0\" aria-label=\"인덱스 프로퍼티 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>인덱스 프로퍼티</h2>\n<p>인덱스 프로퍼티는 해당 객체의 프로퍼티의 이름과 프로퍼티의 갯수가 확정되지 않을 때 사용하면 유용하다. 다음과 같이 프로퍼티 명의 타입과 프로퍼티 값의 타입만 지정해주면 된다. <code class=\"language-text\">[prop: string]</code> 의 prop은 개발자가 편한대로 지정해줘도 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">ErrorContainer</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">[</span>prop<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> errorBag<span class=\"token punctuation\">:</span> ErrorContainer <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  email<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Not a valid email!\"</span><span class=\"token punctuation\">,</span>\n  username<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Must start with a capital character!\"</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>","fields":{"slug":"/category/typescript/typescript-advanced-type","tagSlugs":["/tag/typescript/"]},"frontmatter":{"date":"2019-12-08T18:46:37.121Z","description":"인터페이스를 사용하여 커스텀 타입의 객체를 만들 수 있다. 아래의 예시에서 Person 인터페이스는 특정 객체가 반드시 name, age 프로퍼티를 갖고 greet 메서드를 갖는 객체로 구현되어야 함을 나타낸다...","tags":["typescript"],"title":"타입스크립트 타입 고급","socialImage":"/media/image-2.jpg"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/category/typescript/typescript-advanced-type"}}}
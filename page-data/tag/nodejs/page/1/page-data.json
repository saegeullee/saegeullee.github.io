{"componentChunkName":"component---src-templates-tag-template-js","path":"/tag/nodejs/page/1","result":{"data":{"site":{"siteMetadata":{"title":"Blog by saegeullee","subtitle":""}},"allMarkdownRemark":{"edges":[{"node":{"fields":{"slug":"/nodejs/mongoose-virtual-property","categorySlug":"/category/nodejs/"},"frontmatter":{"title":"Mongoose 가상 프로퍼티","date":"2019-12-14T23:10:37.121Z","category":"nodejs","description":"가상 프로퍼티는 말 그대로 실제로 데이터베이스에 저장되지 않고 가상으로 띄우는 프로퍼티라는 의미로 몽구스 스키마에 다음과 같이 정의할 수 있다. 실제로 데이터베이스에 저장되지 않는 데이터가 왜 필요할까?"}}},{"node":{"fields":{"slug":"/nodejs/mongodb-aggregation-pipeline","categorySlug":"/category/nodejs/"},"frontmatter":{"title":"몽고DB aggregation 파이프라인","date":"2019-12-14T23:00:37.121Z","category":"nodejs","description":"몽고DB aggregation 파이프라인은 강력한 MongoDB 프레임워크로 데이터를 aggregate(종합)할 때 유용하게 쓰인다. 특정 컬렉션의 모든 도큐먼트를 어떤 파이프라인을 통과하게 만들어 종합(aggregate)된 결과를 만들 때 사용할 수 있다..."}}},{"node":{"fields":{"slug":"/nodejs/nodejs-querystring","categorySlug":"/category/nodejs/"},"frontmatter":{"title":"Nodejs & Mongoose 필터링, 정렬, 페이징 구현하기","date":"2019-12-14T16:00:37.121Z","category":"nodejs","description":"쿼리스트링은 클라이언트에서 엔드포인트를 호출하여 서버에 요청할 때 엔드포인트의 끝에 붙여서 부가적으로 보내는 정보이다. 다음의 예시에서 `물음표?` 뒤의 `duration=5&difficulty=easy`가 쿼리스트링이다..."}}},{"node":{"fields":{"slug":"/nodejs/mongoose-basic","categorySlug":"/category/nodejs/"},"frontmatter":{"title":"Mongoose 스키마 & 쿼리 기본","date":"2019-12-13T16:00:37.121Z","category":"nodejs","description":"몽구스는 MongoDB를 Nodejs에서 사용하기 쉽게 추상화해놓은 ODM(Object Data Modeling) 라이브러리이다. 몽구스를 통해 MongoDB와 상호작용하는 어플리케이션을 쉽고 빠르게 개발할 수 있다..."}}},{"node":{"fields":{"slug":"/category/nodejs/nodejs-typescript-setup","categorySlug":"/category/nodejs/"},"frontmatter":{"title":"NODEJS & 타입스크립트 개발환경 셋팅","date":"2019-12-09T11:46:37.121Z","category":"nodejs","description":"타입스크립트로 nodejs 서버를 개발하기 위한 환경 셋팅하는 방법을 알아보자"}}},{"node":{"fields":{"slug":"/nodejs/amazon-documentdb","categorySlug":"/category/nodejs/"},"frontmatter":{"title":"아마존 documentDB에 DB 구축하기","date":"2019-12-06T20:50:37.121Z","category":"nodejs","description":"이번에 클래스101과 협업을 하면서 첫번째 프로젝트로 내부 인사팀 툴을 개발하였다. 배포환경을 서버는 아마존 ec2, 디비는 아마존 documentDB를 사용했다. 아마존 documentDB가 우리가 사용한 mongoDB와 호환이 되기 때문이다. 이때 아마존 documentDB를 구축한 과정을 정리해본다..."}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"tag":"nodejs","currentPage":1,"postsLimit":6,"postsOffset":6,"prevPagePath":"/tag/nodejs","nextPagePath":"/tag/nodejs/page/2","hasPrevPage":true,"hasNextPage":true}}}